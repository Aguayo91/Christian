apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "org.sonarqube"
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.coppel.preconfirmar"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.0"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix " "
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/library-core_release.kotlin_module'
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding = true
    }

    lintOptions {
        checkReleaseBuilds false
    }

    android.applicationVariants.all {
        variant -> variant.outputs.all {
            def appName = "RecepcionSurtidoMueblesPDA"
            outputFileName = appName + ".apk"
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.21'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.21'

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'

    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.fragment:fragment-ktx:1.3.6"
    implementation "androidx.activity:activity-ktx:1.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"
    implementation 'com.airbnb.android:lottie:3.4.1'
    implementation 'com.github.mayuce:LottieAlertDialog:1.1'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'com.google.android.material:material:1.5.0-alpha01'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'androidx.room:room-runtime:2.3.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt 'androidx.room:room-compiler:2.3.0'
    implementation 'androidx.room:room-ktx:2.3.0'

    
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'com.github.chivorns:smartmaterialspinner:1.1.6'
    implementation 'com.jaredrummler:material-spinner:1.3.1'
    implementation 'com.github.scottyab:showhidepasswordedittext:0.8'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation "com.mikepenz:materialdrawer:7.0.0-rc07"

    implementation project(':core')
    implementation project(':ui')
    implementation project(':scanner')

}

task clearData(type: Exec) {
    def clearDataCommand = ['adb', 'shell', 'pm', 'clear', 'com.coppel.framework.example']
    commandLine clearDataCommand
}

sonarqube {
    properties {
        Properties sonarProperties = new Properties()
        sonarProperties.load(project.rootProject.file('sonar-project.properties').newDataInputStream())
        property "sonar.projectName", sonarProperties.getProperty('sonar.projectName')
        property "sonar.projectKey", sonarProperties.getProperty('sonar.projectKey')
        property "sonar.host.url",  sonarProperties.getProperty('sonar.host.url')
        property "sonar.sources", "../"+sonarProperties.getProperty('sonar.sources')
        property "sonar.exclusions", "../"+sonarProperties.getProperty('sonar.exclusions')
    }
}